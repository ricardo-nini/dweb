# Arquivo exemplo de configuracao para Unilojas C001
# Onde se ve [Slave:N], deve-se substituir N pelo numero do slave no sistema

# ----------------------- Parte comum -------------------------------
[Slave:N]
# Nome amigavel para identificacao.
#
# Tipo: str
# Obrigatorio: Sim
# Padrao: Gera erro
Local = Cabine Entrada

# Descricao basica.
#
# Tipo: str
# Obrigatorio: Nao
Desc = Dispositivo C001

# Indica o tipo do Slave, veja os slaves disponiveis na tabela 'modelid' da documentacao geral.
# Essa tabela e constantemente incrementada de novos modelos de Slave.
#
# Tipo: int
# Obrigatorio: Sim
# Padrao: Gera erro
ModelID = 3
# ----------------------- Parte comum -------------------------------

# Habilita ou desabilita monitoramento da bateria.
#
# Tipo: bool
# Obrigatorio: Nao
# Padrao: False
BatteryMonitor = True

# Pino de entrada no processador para sensor da Bateria.
#
# Tipo: str ou int (conforme tipo do processador)
# Obrigatorio: Sim
# Padrao: Gera erro
PinBattery = PA10

# Pino de reset do ATMEGA.
#
# Tipo: str ou int (conforme tipo do processador)
# Obrigatorio: Sim
# Padrao: Gera erro
PinResetAtmega = PA06

# Habilita ou desabilita sistema de trava.
# As opcoes LockEnable, PinLock e PinLockLed a seguir sao usadas em conjunto
#
# Tipo: bool
# Obrigatorio: Nao
# Padrao: False
LockEnable = True

# Pino do processador para chave de bloqueio.
#
# Tipo: str ou int (conforme tipo do processador)
# Obrigatorio: Sim
# Padrao: Gera erro
PinLock = PA16

# Pino do processador usado para sinalizacao bloqueio.
#
# Tipo: str ou int (conforme tipo do processador)
# Obrigatorio: Sim
# Padrao: Gera erro
PinLockLed = PA15

# Device para acesso do I2C do ATMEGA.
#
# Onde :
#        0:/dev/i2c-0 (port I2C0)
#        1:/dev/i2c-1 (port I2C1)
#
# Tipo: int
# Obrigatorio: Sim
# Padrao: Gera erro, observe que pode conflitar com opcao I2C_Display
I2C_Atmega = 1

# Endereco I2C do ATMEGA.
#
# 7 bit address (will be left shifted to add the read write bit)
#
# Tipo: int
# Obrigatorio: Sim
# Padrao: Gera erro
I2C_Atmega_Address = 8

# Device para acesso do DISPLAY.
#
# Onde :
#        0:/dev/i2c-0 (port I2C0)
#        1:/dev/i2c-1 (port I2C1)
#
# Tipo: int
# Obrigatorio: Sim
# Padrao: Gera erro, observe que pode conflitar com opcao I2C_Atmega
I2C_Display = 0

# Endereco I2C do DISPLAY.
#
# 7 bit address (will be left shifted to add the read write bit)
#
# Tipo: int
# Obrigatorio: Sim
# Padrao: Gera erro
I2C_Display_Address = 10

# Intervalo acesso aos sensores em (ms).
#
# Tipo: int
# Obrigatorio: Nao
# Padrao: 500 (ms)
Interval = 500

# Indica o periodo de transmissao do report (m).
# Se usado 0, sera aplicado tempo de demanda, ou seja 0, 15, 30 e 45 minutos da hora.
#
# Tipo: int
# Obrigatorio: Nao
# Padrao: 0
Periodic = 15

# Watch dog, sistema de monitoramento do processador central pelo ATMEGA.
#
# Uma vez habilitado monitora o acesso do processador central ao ATMEGA, que caso nao ocorra no periodo
# especificado pulsa o rele 7 ligado a alimentacao do processador central fazendo que esse reinicie.
# Indica o tempo de espera em segundos sem comunicacao para considerar  que o processador central travou (s).
#
# Tipo: int
# Obrigatorio: Nao
# Padrao: 0 (Desabilita funcao)
WatchDog_Time = 720

# As opcoes abaixo iniciadas com a palavra 'Tolerance_' sao usadas para especificar quando um evento deve ser gerado.
# Nelas e possivel especificar a variacao tanto em valores diretos como em percentuais de variacao para que seja
# gerado o evento.
#
# Tolerance_XXX = A, B, C
#
# Onde: XXX: Indica a grandeza a qual sera monitorada
#         A: Indica o valor minimo (float)
#         B: Indica o valor maximo (float)
#         C: Se True: Valores A e B expressos em percentual, False: Valores A e B expressos na grandeza XXX (bool)
#
#   TempX: C
#
#  Ex: Tolerance_TempY = 5, 5, False
#     Indica que sera gerado um evento se a temperatura Y entre cada leitura do intervalo acima 'Interval' variar de +/- 5C
#
# Se omitido desliga geracao do evento para respectiva grandeza. Se todos omitidos nao gera evento.
#
# Obrigatorio: Nao
# Padrao: Desliga evento
Tolerance_Temp1 = 3, 3, False
Tolerance_Temp2 = 3, 3, False
Tolerance_Temp3 = 3, 3, False
Tolerance_AD = 10, 10, False

# As opcoes abaixo com a palavra 'Alarm_TempX' onde X indica o numero do sensor de temperatura e usado para
# definir quando gerado os alarmes de temperatura.
#
# Alarm_TempX = A, B, C
#
# Onde: X: Indica o numero sensor
#       A: Indica o valor minimo (float)
#       B: Indica o valor maximo (float)
#       C: Inidica o delta. O delta e o valor de arredondamento dos valores A e B
#          ou seja aceita variacao de A+C e A-C.
#
# Se omitido desliga geracao do evento para respectiva temperatura. Se todos omitidos nao gera evento.
#
#   TempX: C
#
#  Ex: Alarm_Temp1 = 15, 20, 1
#     Indica que sera gerado um evento se a temperatura do sensor 1 chegar entre 14 e 16 graus C ou entre 19 e 21 graus C
#
# Obrigatorio: Nao
# Padrao: Desliga evento
Alarm_Temp1 = 15, 20, 1
Alarm_Temp2 = 25, 30, 1.5
Alarm_Temp3 = 15, 30, 1

# As opcoes abaixo GPI_ACX onde X inidica o sensor de entrada AC configuram o tipo de mensagem a ser gerado caso
# mude de estado entre as leituras. (Sao 4 sensores, de 1 a 4)
#
# Opcoes: 0:Disable 1:Event 2:Alarm
#
#
# Quando em disable gera somente Report se habilitado abaixo
#
# Obrigatorio: Nao
# Padrao: Gera somente Report
GPI_AC1 = 1
GPI_AC2 = 1
GPI_AC3 = 2
GPI_AC4 = 2

# Os flags abaixo controlam a geracao das mensagens, com eles e possivel
# habilitar e desabilitar as mensagens de Report, Alarm e Event.
#
# Tipo: bool
# Obrigatorio: Nao
# Padrao: False
Report = True
Alarm = True
Event = True

# As opcoes abaixo iniciadas com a palavra 'Priority_' sao usadas para especificar a prioridade na fila
# de transmissao de cada tipo de mensagem. Quanto maior o valor, menos prioridade.
# As mensagens sao: Report, Alarm e Event.
#
# Tipo: int
# Obrigatorio: Nao
# Padrao: 0
Priority_Report = 5
Priority_Alarm = 0
Priority_Event = 1